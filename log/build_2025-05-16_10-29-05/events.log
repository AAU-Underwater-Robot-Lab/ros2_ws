[0.000000] (-) TimerEvent: {}
[0.000176] (oculus_sonar_driver) JobQueued: {'identifier': 'oculus_sonar_driver', 'dependencies': OrderedDict()}
[0.000219] (oculus_sonar_driver) JobStarted: {'identifier': 'oculus_sonar_driver'}
[0.043943] (oculus_sonar_driver) JobProgress: {'identifier': 'oculus_sonar_driver', 'progress': 'cmake'}
[0.044042] (oculus_sonar_driver) Command: {'cmd': ['/usr/bin/cmake', '/workspaces/oculus_sonar_driver', '-DCATKIN_INSTALL_INTO_PREFIX_ROOT=0', '-DCMAKE_INSTALL_PREFIX=/workspaces/oculus_sonar_driver/install/oculus_sonar_driver'], 'cwd': '/workspaces/oculus_sonar_driver/build/oculus_sonar_driver', 'env': OrderedDict([('GITHUB_TOKEN', 'ghu_eaAr8UHTGR6HEMeyuRrBVBkogkrVNb3TA7X6'), ('GITHUB_CODESPACE_TOKEN', 'AAKEKMEF2YJY3NTFYJSZTR3IE634LANCNFSM4ANTY2OA'), ('HOSTNAME', 'codespaces-d279bb'), ('GIT_ASKPASS', '/vscode/bin/linux-alpine/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/extensions/git/dist/askpass.sh'), ('GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN', 'app.github.dev'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/vscode/bin/linux-x64/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/bin/helpers/browser.sh'), ('HOME', '/root'), ('OLDPWD', '/workspaces/ros2_ws'), ('TERM_PROGRAM_VERSION', '1.100.2'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-ede1384a-5e37-429e-8cc8-d60475f17d9a.sock'), ('CODESPACES', 'true'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/vscode/bin/linux-alpine/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/vscode/bin/linux-alpine/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/node'), ('COLORTERM', 'truecolor'), ('GITHUB_USER', 'zerodamage'), ('GITHUB_GRAPHQL_URL', 'https://api.github.com/graphql'), ('ROS_DISTRO', 'humble'), ('ContainerVersion', '13'), ('GITHUB_API_URL', 'https://api.github.com'), ('RepositoryName', 'oculus_sonar_driver'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('CLOUDENV_ENVIRONMENT_ID', '26c3efbf-f3e6-494f-94ee-78d1f2eba546'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/vscode/bin/linux-x64/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('SHELL_LOGGED_IN', 'true'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/vscode-git-f442256f02.sock'), ('GITHUB_REPOSITORY', 'AAU-Underwater-Robot-Lab/oculus_sonar_driver'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('DEBIAN_FRONTEND', 'noninteractive'), ('SHELL', '/bin/bash'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/workspaces/oculus_sonar_driver/build/oculus_sonar_driver'), ('INTERNAL_VSCS_TARGET_URL', 'https://westeurope.online.visualstudio.com'), ('LC_ALL', 'C.UTF-8'), ('GITHUB_SERVER_URL', 'https://github.com'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('CODESPACE_NAME', 'turbo-sniffle-pjq77vj9q9hw5g'), ('CODESPACE_VSCODE_FOLDER', '/workspaces/oculus_sonar_driver'), ('COLCON', '1')]), 'shell': False}
[0.100009] (-) TimerEvent: {}
[0.206542] (-) TimerEvent: {}
[0.308534] (-) TimerEvent: {}
[0.409150] (-) TimerEvent: {}
[0.458607] (oculus_sonar_driver) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.514533] (-) TimerEvent: {}
[0.616534] (-) TimerEvent: {}
[0.716954] (-) TimerEvent: {}
[0.817335] (-) TimerEvent: {}
[0.848512] (oculus_sonar_driver) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.910191] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.919310] (-) TimerEvent: {}
[1.020850] (-) TimerEvent: {}
[1.123937] (-) TimerEvent: {}
[1.230622] (-) TimerEvent: {}
[1.331048] (-) TimerEvent: {}
[1.418749] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[1.433522] (-) TimerEvent: {}
[1.477514] (oculus_sonar_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[1.479016] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[1.482479] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[1.508639] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[1.541518] (-) TimerEvent: {}
[1.641877] (-) TimerEvent: {}
[1.743334] (-) TimerEvent: {}
[1.845531] (-) TimerEvent: {}
[1.949967] (-) TimerEvent: {}
[1.973245] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[2.024222] (oculus_sonar_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[2.027767] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[2.028609] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[2.045666] (oculus_sonar_driver) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[2.045920] (oculus_sonar_driver) StdoutLine: {'line': b'See also "/workspaces/oculus_sonar_driver/build/oculus_sonar_driver/CMakeFiles/CMakeOutput.log".\n'}
[2.048677] (oculus_sonar_driver) StderrLine: {'line': b'\x1b[31mCMake Error at CMakeLists.txt:10 (find_package):\n'}
[2.048894] (oculus_sonar_driver) StderrLine: {'line': b'  By not providing "Findcatkin.cmake" in CMAKE_MODULE_PATH this project has\n'}
[2.049028] (oculus_sonar_driver) StderrLine: {'line': b'  asked CMake to find a package configuration file provided by "catkin", but\n'}
[2.049140] (oculus_sonar_driver) StderrLine: {'line': b'  CMake did not find one.\n'}
[2.049261] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.049701] (oculus_sonar_driver) StderrLine: {'line': b'  Could not find a package configuration file provided by "catkin" with any\n'}
[2.049824] (oculus_sonar_driver) StderrLine: {'line': b'  of the following names:\n'}
[2.049933] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.051050] (-) TimerEvent: {}
[2.052636] (oculus_sonar_driver) StderrLine: {'line': b'    catkinConfig.cmake\n'}
[2.052809] (oculus_sonar_driver) StderrLine: {'line': b'    catkin-config.cmake\n'}
[2.052924] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.054106] (oculus_sonar_driver) StderrLine: {'line': b'  Add the installation prefix of "catkin" to CMAKE_PREFIX_PATH or set\n'}
[2.054258] (oculus_sonar_driver) StderrLine: {'line': b'  "catkin_DIR" to a directory containing one of the above files.  If "catkin"\n'}
[2.054362] (oculus_sonar_driver) StderrLine: {'line': b'  provides a separate development package or SDK, be sure it has been\n'}
[2.054486] (oculus_sonar_driver) StderrLine: {'line': b'  installed.\n'}
[2.054572] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.054636] (oculus_sonar_driver) StderrLine: {'line': b'\x1b[0m\n'}
[2.079928] (oculus_sonar_driver) CommandEnded: {'returncode': 1}
[2.160540] (-) TimerEvent: {}
[2.194910] (oculus_sonar_driver) JobEnded: {'identifier': 'oculus_sonar_driver', 'rc': 1}
[2.213687] (-) EventReactorShutdown: {}
