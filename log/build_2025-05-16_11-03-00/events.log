[0.000000] (-) TimerEvent: {}
[0.022786] (oculus_sonar_driver) JobQueued: {'identifier': 'oculus_sonar_driver', 'dependencies': OrderedDict()}
[0.022889] (oculus_sonar_driver) JobStarted: {'identifier': 'oculus_sonar_driver'}
[0.081511] (oculus_sonar_driver) JobProgress: {'identifier': 'oculus_sonar_driver', 'progress': 'cmake'}
[0.084003] (oculus_sonar_driver) Command: {'cmd': ['/usr/bin/cmake', '/workspaces/oculus_sonar_driver', '-DCATKIN_INSTALL_INTO_PREFIX_ROOT=0', '-DCMAKE_INSTALL_PREFIX=/workspaces/oculus_sonar_driver/install/oculus_sonar_driver'], 'cwd': '/workspaces/oculus_sonar_driver/build/oculus_sonar_driver', 'env': OrderedDict([('GITHUB_TOKEN', 'ghu_e0TBCnMQetwCw2U2VAuKh6P8zTctdt2uE8gT'), ('GITHUB_CODESPACE_TOKEN', 'AAKEKMHK7BBIXS6WXZJHL6TIE7B6XANCNFSM4ANTZR3A'), ('HOSTNAME', 'codespaces-832c63'), ('GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN', 'app.github.dev'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/vscode/bin/linux-x64/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/bin/helpers/browser.sh'), ('HOME', '/root'), ('OLDPWD', '/workspaces/ros2_ws'), ('TERM_PROGRAM_VERSION', '1.100.2'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-f45a9043-66fe-465d-849b-72ecc40914a9.sock'), ('CODESPACES', 'true'), ('ROS_PYTHON_VERSION', '3'), ('COLORTERM', 'truecolor'), ('GITHUB_USER', 'zerodamage'), ('GITHUB_GRAPHQL_URL', 'https://api.github.com/graphql'), ('ROS_DISTRO', 'humble'), ('ContainerVersion', '13'), ('GITHUB_API_URL', 'https://api.github.com'), ('RepositoryName', 'oculus_sonar_driver'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('CLOUDENV_ENVIRONMENT_ID', '646f6b91-7da2-4485-a47e-21e25f69f1eb'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/vscode/bin/linux-x64/848b80aeb52026648a8ff9f7c45a9b0a80641e2e/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('SHELL_LOGGED_IN', 'true'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GITHUB_REPOSITORY', 'AAU-Underwater-Robot-Lab/oculus_sonar_driver'), ('TERM_PROGRAM', 'vscode'), ('AMENT_PREFIX_PATH', '/opt/ros/humble'), ('DEBIAN_FRONTEND', 'noninteractive'), ('SHELL', '/bin/bash'), ('PWD', '/workspaces/oculus_sonar_driver/build/oculus_sonar_driver'), ('INTERNAL_VSCS_TARGET_URL', 'https://westeurope.online.visualstudio.com'), ('LC_ALL', 'C.UTF-8'), ('GITHUB_SERVER_URL', 'https://github.com'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('CODESPACE_NAME', 'potential-meme-vp6w9pj9rh67v'), ('COLCON', '1')]), 'shell': False}
[0.102763] (-) TimerEvent: {}
[0.203327] (-) TimerEvent: {}
[0.304022] (-) TimerEvent: {}
[0.404805] (-) TimerEvent: {}
[0.479784] (oculus_sonar_driver) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.505484] (-) TimerEvent: {}
[0.607186] (-) TimerEvent: {}
[0.708494] (-) TimerEvent: {}
[0.814842] (-) TimerEvent: {}
[0.915260] (-) TimerEvent: {}
[0.971878] (oculus_sonar_driver) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[1.014783] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[1.021775] (-) TimerEvent: {}
[1.122151] (-) TimerEvent: {}
[1.223666] (-) TimerEvent: {}
[1.329820] (-) TimerEvent: {}
[1.434797] (-) TimerEvent: {}
[1.470186] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[1.538020] (-) TimerEvent: {}
[1.576909] (oculus_sonar_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[1.577190] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[1.588169] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[1.619176] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[1.641794] (-) TimerEvent: {}
[1.746804] (-) TimerEvent: {}
[1.850805] (-) TimerEvent: {}
[1.953798] (-) TimerEvent: {}
[2.054820] (-) TimerEvent: {}
[2.097872] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[2.156803] (-) TimerEvent: {}
[2.172679] (oculus_sonar_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[2.173019] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[2.176459] (oculus_sonar_driver) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[2.206819] (oculus_sonar_driver) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[2.207178] (oculus_sonar_driver) StdoutLine: {'line': b'See also "/workspaces/oculus_sonar_driver/build/oculus_sonar_driver/CMakeFiles/CMakeOutput.log".\n'}
[2.209773] (oculus_sonar_driver) StderrLine: {'line': b'\x1b[31mCMake Error at CMakeLists.txt:10 (find_package):\n'}
[2.210023] (oculus_sonar_driver) StderrLine: {'line': b'  By not providing "Findcatkin.cmake" in CMAKE_MODULE_PATH this project has\n'}
[2.210141] (oculus_sonar_driver) StderrLine: {'line': b'  asked CMake to find a package configuration file provided by "catkin", but\n'}
[2.210243] (oculus_sonar_driver) StderrLine: {'line': b'  CMake did not find one.\n'}
[2.210344] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.210444] (oculus_sonar_driver) StderrLine: {'line': b'  Could not find a package configuration file provided by "catkin" with any\n'}
[2.210546] (oculus_sonar_driver) StderrLine: {'line': b'  of the following names:\n'}
[2.210645] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.210922] (oculus_sonar_driver) StderrLine: {'line': b'    catkinConfig.cmake\n'}
[2.212923] (oculus_sonar_driver) StderrLine: {'line': b'    catkin-config.cmake\n'}
[2.213058] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.213179] (oculus_sonar_driver) StderrLine: {'line': b'  Add the installation prefix of "catkin" to CMAKE_PREFIX_PATH or set\n'}
[2.215881] (oculus_sonar_driver) StderrLine: {'line': b'  "catkin_DIR" to a directory containing one of the above files.  If "catkin"\n'}
[2.217938] (oculus_sonar_driver) StderrLine: {'line': b'  provides a separate development package or SDK, be sure it has been\n'}
[2.218090] (oculus_sonar_driver) StderrLine: {'line': b'  installed.\n'}
[2.218206] (oculus_sonar_driver) StderrLine: {'line': b'\n'}
[2.218320] (oculus_sonar_driver) StderrLine: {'line': b'\x1b[0m\n'}
[2.234831] (oculus_sonar_driver) CommandEnded: {'returncode': 1}
[2.259788] (-) TimerEvent: {}
[2.367785] (-) TimerEvent: {}
[2.369080] (oculus_sonar_driver) JobEnded: {'identifier': 'oculus_sonar_driver', 'rc': 1}
[2.382435] (-) EventReactorShutdown: {}
